USE Lab_1
GO
CREATE TABLE AUTHORS(
  ID INTEGER PRIMARY KEY IDENTITY(1,1),
  FIO VARCHAR(50) NOT NULL,
  ID_NATIONALITY INTEGER NOT NULL,
  BIRTHDAY DATE NOT NULL,
  FOREIGN KEY (ID_NATIONALITY) REFERENCES NATIONALTY(ID),
  CHECK(LEN(FIO) > 3)
);
GO

INSERT INTO AUTHORS (FIO, ID_NATIONALITY, BIRTHDAY) VALUES('ABCD', 1, '2019/02/02');
GO

CREATE INDEX id_nationality_authors ON AUTHORS(ID_NATIONALITY);
GO

CREATE VIEW VW_AUTHORS
AS
SELECT ID, FIO, ID_NATIONALITY, BIRTHDAY
FROM AUTHORS;
GO


CREATE TRIGGER AUTHORS_TRIGGER_INSERT
ON AUTHORS
AFTER INSERT
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('AUTHORS', 'INSERT');
GO


CREATE TRIGGER AUTHORS_TRIGGER_UPDATE
ON AUTHORS
AFTER UPDATE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('AUTHORS', 'UPDATE');
GO


CREATE TRIGGER AUTHORS_TRIGGER_DELETE
ON AUTHORS
AFTER DELETE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('AUTHORS', 'DELETE');
GO

CREATE PROCEDURE INSERT_AUTHORS 
    @FIO VARCHAR(50),
	@ID_NATIONALITY INTEGER,
	@BIRTHDAY DATE
WITH RECOMPILE    
AS  
    BEGIN TRY
       INSERT INTO AUTHORS(FIO, ID_NATIONALITY, BIRTHDAY) VALUES(@FIO, @ID_NATIONALITY, @BIRTHDAY)
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE UPDATE_AUTHORS 
    @ID INTEGER,
    @FIO VARCHAR(50),
	@ID_NATIONALITY INTEGER,
	@BIRTHDAY DATE
WITH RECOMPILE    
AS  
    BEGIN TRY
	IF @FIO != '' AND @FIO IS NOT NULL
	BEGIN
       UPDATE AUTHORS SET FIO = @FIO WHERE ID = @ID
	END
	IF @ID_NATIONALITY > 0 AND @ID_NATIONALITY IS NOT NULL
	BEGIN
       UPDATE AUTHORS SET ID_NATIONALITY = @ID_NATIONALITY WHERE ID = @ID
	END
	IF @BIRTHDAY != '' AND @BIRTHDAY IS NOT NULL
	BEGIN
       UPDATE AUTHORS SET BIRTHDAY = @BIRTHDAY WHERE ID = @ID
	END
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO


CREATE PROCEDURE SELECT_AUTHORS
WITH RECOMPILE    
AS  
    BEGIN TRY
       SELECT * FROM VW_AUTHORS;
	   RETURN;
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE DELETE_AUTHORS
    @ID INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
       DELETE AUTHORS WHERE ID = @ID
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO  