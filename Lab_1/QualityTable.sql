DROP TABLE QUALITY;
USE Lab_1
GO
CREATE TABLE QUALITY(
  ID INTEGER PRIMARY KEY IDENTITY(1,1),
  ID_PAPER INTEGER,
  ID_PAGE_PROOFS INTEGER,
  FOREIGN KEY (ID_PAPER) REFERENCES PAPER(ID),
  FOREIGN KEY (ID_PAGE_PROOFS) REFERENCES PAGE_PROOFS(ID)
);
GO

INSERT INTO QUALITY(ID_PAPER, ID_PAGE_PROOFS) VALUES(1,1);

CREATE INDEX id_paper_quality ON QUALITY(ID_PAPER);
GO

CREATE INDEX id_page_proofs_quality ON QUALITY(ID_PAGE_PROOFS);
GO

CREATE TRIGGER QUALITY_TRIGGER_INSERT
ON QUALITY
AFTER INSERT
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('QUALITY', 'INSERT');
GO


CREATE TRIGGER QUALITY_TRIGGER_UPDATE
ON QUALITY
AFTER UPDATE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('QUALITY', 'UPDATE');
GO


CREATE TRIGGER QUALITY_TRIGGER_DELETE
ON QUALITY
AFTER DELETE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('QUALITY', 'DELETE');
GO

CREATE PROCEDURE INSERT_QUALITY
    @ID_PAPER INTEGER,
	@ID_PAGE_PROOFS INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
       INSERT INTO QUALITY(ID_PAPER, ID_PAGE_PROOFS) VALUES(@ID_PAPER, @ID_PAGE_PROOFS)
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE UPDATE_QUALITY
    @ID INTEGER,
    @ID_PAPER INTEGER,
	@ID_PAGE_PROOFS INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
	IF @ID_PAPER > 0 AND @ID_PAPER IS NOT NULL
	BEGIN
       UPDATE QUALITY SET ID_PAPER = @ID_PAPER WHERE ID = @ID
	END
    IF @ID_PAGE_PROOFS > 0 AND @ID_PAGE_PROOFS IS NOT NULL
	BEGIN
       UPDATE QUALITY SET ID_PAGE_PROOFS = @ID_PAGE_PROOFS WHERE ID = @ID
	END
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE SELECT_QUALITY
WITH RECOMPILE    
AS  
    BEGIN TRY
       SELECT * FROM VW_QUALITY;
	   RETURN;
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE DELETE_QUALITY
    @ID INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
       DELETE QUALITY WHERE ID = @ID
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE VIEW VW_QUALITY
AS
SELECT ID, ID_PAPER, ID_PAGE_PROOFS
FROM QUALITY;

GO