USE Lab_1
GO
CREATE TABLE CUSTOMER(
  ID INTEGER PRIMARY KEY IDENTITY(1,1),
  FIO VARCHAR(50) NOT NULL,
  ID_NATIONALITY INTEGER NOT NULL,
  "LOCATION" VARCHAR(100) NOT NULL,
  FOREIGN KEY (ID_NATIONALITY) REFERENCES NATIONALTY(ID),
  CHECK(LEN(FIO) > 3)
); 
GO

INSERT INTO CUSTOMER (FIO, ID_NATIONALITY, "LOCATION") VALUES('ABCD', 1, 'AMF');
GO

CREATE INDEX id_nationality_customer ON CUSTOMER(ID_NATIONALITY);
GO

CREATE TRIGGER CUSTOMER_TRIGGER_INSERT
ON CUSTOMER
AFTER INSERT
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('CUSTOMER', 'INSERT');
GO

CREATE TRIGGER CUSTOMER_TRIGGER_UPDATE
ON CUSTOMER
AFTER UPDATE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('CUSTOMER', 'UPDATE');
GO

CREATE TRIGGER CUSTOMER_TRIGGER_DELETE
ON CUSTOMER
AFTER DELETE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('CUSTOMER', 'DELETE');
GO

CREATE VIEW VW_CUSTOMER
AS
SELECT ID, FIO, ID_NATIONALITY, "LOCATION"
FROM CUSTOMER;
GO

CREATE PROCEDURE INSERT_CUSTOMER
    @FIO VARCHAR(50),
	@ID_NATIONALITY INTEGER,
	@LOCATION VARCHAR(50)
WITH RECOMPILE    
AS  
    BEGIN TRY
       INSERT INTO CUSTOMER(FIO, ID_NATIONALITY, "LOCATION") VALUES(@FIO, @ID_NATIONALITY, @LOCATION)
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO


CREATE PROCEDURE UPDATE_CUSTOMER 
    @ID INTEGER,
    @FIO VARCHAR(50),
	@ID_NATIONALITY INTEGER,
	@LOCATION VARCHAR(50)
WITH RECOMPILE    
AS  
    BEGIN TRY
	IF @FIO != '' AND @FIO IS NOT NULL
	BEGIN
       UPDATE CUSTOMER SET FIO = @FIO WHERE ID = @ID
	END
	IF @ID_NATIONALITY > 0 AND @ID_NATIONALITY IS NOT NULL
	BEGIN
       UPDATE CUSTOMER SET ID_NATIONALITY = @ID_NATIONALITY WHERE ID = @ID
	END
	IF @LOCATION != '' AND @LOCATION IS NOT NULL
	BEGIN
       UPDATE CUSTOMER SET "LOCATION" = @LOCATION WHERE ID = @ID
	END
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE SELECT_CUSTOMERS
WITH RECOMPILE    
AS  
    BEGIN TRY
       SELECT * FROM VW_CUSTOMER;
	   RETURN;
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE DELETE_CUSTOMER
    @ID INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
       DELETE CUSTOMER WHERE ID = @ID
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO