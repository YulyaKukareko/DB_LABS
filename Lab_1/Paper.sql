USE Lab_1
GO
CREATE TABLE PAPER(
  ID INTEGER PRIMARY KEY IDENTITY(1,1),
  "TYPE" VARCHAR(50) NOT NULL,
  CHECK(LEN("TYPE" )> 0)
);
GO

INSERT INTO PAPER ("TYPE") VALUES('B')
GO

DELETE PAPER WHERE ID=1
GO

UPDATE PAPER SET "TYPE" = 'AASDA' WHERE ID = 1
GO

CREATE TRIGGER PAPER_TRIGGER_INSERT
ON PAPER
AFTER INSERT
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('PAPER', 'INSERT');
GO 


CREATE TRIGGER PAPER_TRIGGER_UPDATE
ON PAPER
AFTER UPDATE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('PAPER', 'UPDATE');
GO

CREATE TRIGGER PAPER_TRIGGER_DELETE
ON PAPER
AFTER DELETE
AS
INSERT INTO ACTIONS_LOG (TABLE_NAME, ACTION_NAME) VALUES('PAPER', 'DELETE');
GO


CREATE VIEW VW_PAPER
AS
SELECT ID, "TYPE"
FROM PAPER;
GO

CREATE PROCEDURE INSERT_PAPER
    @TYPE VARCHAR(50)
WITH RECOMPILE    
AS  
    BEGIN TRY
       INSERT INTO PAPER("TYPE") VALUES(@TYPE)
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE UPDATE_PAPER
    @ID INTEGER,
    @TYPE VARCHAR(50)
WITH RECOMPILE    
AS  
    BEGIN TRY
	IF @TYPE != '' AND @TYPE IS NOT NULL 
	BEGIN
       UPDATE PAPER SET "TYPE" = @TYPE WHERE ID = @ID
	END
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE SELECT_PAPER
WITH RECOMPILE    
AS  
    BEGIN TRY
       SELECT * FROM VW_PAPER;
	   RETURN;
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO

CREATE PROCEDURE DELETE_PAPER
    @ID INTEGER
WITH RECOMPILE    
AS  
    BEGIN TRY
       DELETE PAPER WHERE ID = @ID
    END TRY
	BEGIN CATCH
	   SELECT ERROR_MESSAGE() AS ERROR_MESSAGE;
	END CATCH
GO